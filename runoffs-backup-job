#!/usr/bin/perl

use POSIX qw(strftime);
use File::Find;
use File::Path qw(remove_tree);
use IO::Dir;
use IO::File;
use Time::Local;

$SourceDir = '/home/runoffs/Dropbox/Runoffs-2015';
$BackupDir = '/home/runoffs/Backups/Runoffs-2015';

$| = 1;

sub update_status ($) {
  my $path = "$BackupDir/status";
  my $F = new IO::File("$path.new", O_RDWR|O_CREAT|O_TRUNC, 0644)
    or die "$path.new: $!\n";
  print $F @_, "\n";
  $F->close;
  rename("$path.new", $path);
}

$this_backup = strftime('%Y-%m-%d.%H:%M', localtime(time));
$D = new IO::Dir($BackupDir) or die "$BackupDir: $!\n";
while (defined($_ = $D->read)) {
  next unless /^(\d{4})-(\d{2})-(\d{2})\.(\d{2}):(\d{2})$/;
  my($YYYY, $MM, $DD, $hh, $mm) = ($1, $2, $3, $4, $5);
  next unless -d "$BackupDir/$_";
  my $mtime = timelocal(00, $mm, $hh, $DD, $MM-1, $YYYY);
  next unless $mtime > $last_mtime;
  $last_backup = $_;
  $last_mtime = $mtime;
}
$D->close;

if ($ARGV[0] eq '-s') {
  exec('/bin/cat', "$BackupDir/status");
  die "cat: $!\n";
}

update_status "$last_backup $this_backup Running";
print "\nRunning backup; last=$last_backup; this=$this_backup\n";

my @cmd = qw(rsync -av --delete);
push(@cmd, '--exclude=/.dropbox');
push(@cmd, "--link-dest=$BackupDir/$last_backup") if defined $last_backup;
push(@cmd, "$SourceDir/", "$BackupDir/$this_backup/");
my $r = system(@cmd);

if ($r) {
  my $msg;
  if    ($r == -1)  { $msg = "rsync: $!"                                    }
  elsif ($? & 0x7f) { $msg = sprintf("rsync: died on signal %d", $? & 0x7f) }
  else              { $msg = sprintf("rsync: exit %d", $? >> 8)             }
  update_status("$last_backup $this_backup $msg");
  die "$msg\n";
}

# See if there's actually anything in $this_backup with only one link.
find(sub {
    if ((lstat($_))[3] == 1) {
      update_status("$this_backup $this_backup Success");
      exit(0);
    }
  }, "$BackupDir/$this_backup");

update_status("$last_backup $this_backup No change");
print "Nothing changed; removing $this_backup\n";
remove_tree("$BackupDir/$this_backup");

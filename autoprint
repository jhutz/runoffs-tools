#!/usr/bin/perl

use File::Basename;
use File::Spec;
use Linux::Inotify2;

my $PROG     = File::Spec->rel2abs($0);
my $PROGDIR  = dirname($PROG);
my $PROGNAME = basename($PROG);

my $DIR = $ARGV[0];
my $PRINTER = $ARGV[1];

sub try_restart() {
  return unless -f $PROG;
  print STDERR "$PROGNAME updated; validating\n";
  next if system($^X, '-cw', $PROG);
  print STDERR "restarting...\n";
  exec($^X, $PROG, @ARGV) or warn "$PROG: $!\n";
}

my $inotify = new Linux::Inotify2
  or die "unable to create new inotify object: $!";

# Watch ourselves for reexec
$inotify->watch($PROG, IN_CLOSE_WRITE | IN_DELETE_SELF | IN_MOVE_SELF,
  sub {
    try_restart;
    print STDERR "$PROGNAME deleted; waiting for replacement...\n";
    $inotify->watch($PROGDIR, IN_CREATE | IN_MOVED_TO, sub {
        my $E = shift;
        return unless $E->name eq $PROGNAME;
        try_restart;
      });
  });

# Watch for files to print
$inotify->watch($DIR, IN_CREATE|IN_MOVED_TO, sub {
    my $E = shift;
    my $n = $E->name;
    my $f = $E->fullname;
    if ($f =~ /\.(jpg|jpeg|gif|png)$/) {
      print "Printing $n...\n";
      system("$PROGDIR/picprint", $f, $PRINTER);
    } else {
      print "Ignoring unrecognized file $n\n";
    }
  });

print "Watching $DIR...\n";
1 while $inotify->poll;

#convert 2015-09-14\ 21.07.35.jpg -rotate '90>' -density 300 -resize 2400x3000 pdf:- | lp -dpuddle-jumper

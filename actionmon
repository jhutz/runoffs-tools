#!/usr/bin/perl

use Archive::Zip qw(:ERROR_CODES :CONSTANTS);
use DBI;
use File::Basename;
use Getopt::Std;
use HTML::Parser;
use IO::File;
use IO::Pipe;
use LWP;
use POSIX qw(strftime);
use URI::Escape;
use Text::Wrap;

use strict;
use vars qw($LOGOFILE $LOGOPATH $LOGODATA %ClassKey $LIST);
use vars qw($DEBUG $VERBOSE $GETONLY $MONITOR $REPORT $UPDATE $FORCE);
use vars qw($DBPath $DB $Template $Printer $SERVER $USERID $PASSWD);
use vars qw($URLBase $LoginURL $ListURL $GetURL $UA %FormInputs);

$LOGOFILE = 'scca-runoffs-2020-ra-alpha.eps';
$LOGOPATH = "$ENV{HOME}/runoffs/Images/$LOGOFILE";

$SERVER   = 'racecontrol.scca.com';
$USERID   = 'tandsusr1';
$DBPath   = "$ENV{HOME}/runoffs/Results/actions.db";
$Template = join('', <DATA>);

$Text::Wrap::unexpand = 0;

%ClassKey = (
  'deb77fcf-a0c7-487e-bc36-986bc041ef86' => 'Test Oct  3 2020  8:00AM B-Spec',
  '8cbe8837-4fb9-4b98-a5be-080803291ca7' => 'Test Oct  3 2020  8:00AM EP',
  '89ae025a-cf91-4c67-a2bf-f0f45e4e93b7' => 'Test Oct  3 2020  8:00AM FP',
  'bacd56d1-185d-414a-beee-60d6b30b2512' => 'Test Oct  3 2020  8:00AM GTL',
  '41c8c759-a34c-4f78-9338-a6c4bd6ba57e' => 'Test Oct  3 2020  8:00AM HP',
  '9c73283e-ca3c-4cf3-a43b-1df21ffdced8' => 'Test Oct  3 2020  8:00AM SM',
  '48935976-9393-4002-960a-f607212c4061' => 'Test Oct  3 2020  8:00AM STL',
  'b262138b-72b1-4f8f-9c0d-fc51719697f5' => 'Test Oct  3 2020  8:00AM T3',
  'd89455f1-aaa3-4031-8bc7-8c0b6b025805' => 'Test Oct  3 2020  8:00AM T4',
  'f47b8c2b-29b0-494c-a092-4685da06c44e' => 'Test Oct  3 2020  8:30AM F5',
  'c07a21e8-f5a6-4832-b0df-ace4a4a429cb' => 'Test Oct  3 2020  8:30AM FF',
  'c8aa711a-a96e-4083-8884-4043420ee6ac' => 'Test Oct  3 2020  8:30AM FV',
  '284ac1ce-4e09-40ae-b522-72d41b3a6c13' => 'Test Oct  3 2020  8:30AM SRF3',
  '65a8883d-5c3b-415a-9b41-023e507922c0' => 'Test Oct  3 2020  9:00AM AS',
  '23230ea0-5596-4d7e-b681-8bac26d47101' => 'Test Oct  3 2020  9:00AM GT1',
  'e15366f8-d59c-4953-8006-0f13e3e6cc6c' => 'Test Oct  3 2020  9:00AM GT2',
  '3b3af103-bedc-4c10-b5e1-67bab5308607' => 'Test Oct  3 2020  9:00AM GT3',
  'c36abcd4-9899-4161-a568-a46701b6ec2f' => 'Test Oct  3 2020  9:00AM STU',
  'ac721012-671f-4287-87a1-fcd08c1390cb' => 'Test Oct  3 2020  9:00AM T1',
  '5c800d81-9773-4573-9acf-c47dc9df91e1' => 'Test Oct  3 2020  9:00AM T2',
  '59026916-0312-4daf-8c5a-15e2361de190' => 'Test Oct  3 2020  9:30AM FA',
  '93aa21bd-97a0-498f-ac66-15969f323ff4' => 'Test Oct  3 2020  9:30AM FC',
  'ec2a9500-2fef-4def-9b0f-e5cf58d59250' => 'Test Oct  3 2020  9:30AM FE2',
  'f0bcb512-d8c5-4c4d-96bd-1ad1365d1a38' => 'Test Oct  3 2020  9:30AM FX',
  'b4cc27e4-a265-4d88-be7e-67cd8c9a96f9' => 'Test Oct  3 2020  9:30AM P1',
  'c90c79d9-0bbc-4dd4-bf83-080e5c1d89b7' => 'Test Oct  3 2020  9:30AM P2',
  '19cca400-4160-4531-996b-60651044b0fd' => 'Test Oct  3 2020 10:00AM B-Spec',
  '99d5c337-adbe-4274-a0f9-9a3d5ff9c8bc' => 'Test Oct  3 2020 10:00AM EP',
  '45feec06-3eb7-4b5e-b963-ba1f7323c327' => 'Test Oct  3 2020 10:00AM FP',
  '7cdebcb3-2e19-405c-a77d-5addaa3cf74e' => 'Test Oct  3 2020 10:00AM GTL',
  'a7724c7f-5833-4f4d-9a45-a648548fa7d6' => 'Test Oct  3 2020 10:00AM HP',
  '6c950cf4-3c1d-4980-904a-f4b653823815' => 'Test Oct  3 2020 10:00AM SM',
  '1728d054-ca92-40c7-b644-a7d116911f45' => 'Test Oct  3 2020 10:00AM STL',
  '2d82de2c-3e07-4b24-84f4-7541586714a2' => 'Test Oct  3 2020 10:00AM T3',
  'c2bb0042-0588-4de2-a87f-8d5cda5902b9' => 'Test Oct  3 2020 10:00AM T4',
  '294e75a3-35f6-46d3-95f3-1f2ef5466e2e' => 'Test Oct  3 2020 10:30AM F5',
  'c2b8c2a6-43ba-43f3-a628-f3aead99d151' => 'Test Oct  3 2020 10:30AM FF',
  '60e15458-6f5d-4fa8-af11-c99d1a298def' => 'Test Oct  3 2020 10:30AM FV',
  '3f50fa37-ab6b-4090-bc17-77c8db5799d6' => 'Test Oct  3 2020 10:30AM SRF3',
  '2bce1d75-5409-4a28-92b9-f2c34b672016' => 'Test Oct  3 2020 11:00AM AS',
  '1e1672fb-7d84-4f66-9e48-a6c6636a9092' => 'Test Oct  3 2020 11:00AM GT1',
  'de6ed177-1a36-4c74-b96b-a0624c40ae19' => 'Test Oct  3 2020 11:00AM GT2',
  'd23310ab-7b51-4f2b-9515-55a95b76403a' => 'Test Oct  3 2020 11:00AM GT3',
  '0c8f5ed2-bb9a-4b52-a97b-25d469d08497' => 'Test Oct  3 2020 11:00AM STU',
  '43491a74-5530-4729-a7e2-e5c243ea1c6d' => 'Test Oct  3 2020 11:00AM T1',
  'bfd0fa71-e55c-49cd-acc4-88e879102513' => 'Test Oct  3 2020 11:00AM T2',
  '901bad34-e580-4390-b2c8-63fae94db23b' => 'Test Oct  3 2020 11:30AM FA',
  '9d56426f-be00-4cfa-bf06-e2dad1b801a0' => 'Test Oct  3 2020 11:30AM FC',
  'eb50244c-debd-41fc-9245-dbdd0af77ff4' => 'Test Oct  3 2020 11:30AM FE2',
  'c4458638-efda-4664-92e2-0844594c157c' => 'Test Oct  3 2020 11:30AM FX',
  '5a0f2977-717b-485e-ad04-25082b475a19' => 'Test Oct  3 2020 11:30AM P1',
  '27a6e474-b0d8-46b5-a957-a453c8b5b797' => 'Test Oct  3 2020 11:30AM P2',
  '0beec631-501d-47d9-9e2e-f2c6c7ab4787' => 'Test Oct  3 2020 12:55PM B-Spec',
  'dd871e96-d58b-4777-8ca3-e459ae51ad8d' => 'Test Oct  3 2020 12:55PM EP',
  'faa7dccf-5117-4474-ba94-0ceb649923af' => 'Test Oct  3 2020 12:55PM FP',
  'd16c5e40-c8eb-4fdd-9637-e02d6f347fa9' => 'Test Oct  3 2020 12:55PM GTL',
  'a90e40fa-9bae-4382-b1f0-fab3bc33378d' => 'Test Oct  3 2020 12:55PM HP',
  '67e0cb53-cce1-4917-b135-9db27080edfd' => 'Test Oct  3 2020 12:55PM SM',
  '52348c9e-2875-4dcb-ba68-3bc5fbf1d7f2' => 'Test Oct  3 2020 12:55PM STL',
  '6ccad0e4-6af2-4017-8dd2-94625bc5623d' => 'Test Oct  3 2020 12:55PM T3',
  '63dc6f7c-8037-4317-8bbb-6346e3c04002' => 'Test Oct  3 2020 12:55PM T4',
  'dc19f010-a979-46ca-96d8-fa861668b296' => 'Test Oct  3 2020  1:25PM F5',
  '35669c7a-2c17-4efc-aa40-87863448240f' => 'Test Oct  3 2020  1:25PM FF',
  '5e913679-d89b-4b39-8e0d-f07650a3266c' => 'Test Oct  3 2020  1:25PM FV',
  'd28170bb-5f05-4a7c-b9fe-1a9b55fe19c6' => 'Test Oct  3 2020  1:25PM SRF3',
  'd2ab18b2-e856-4f15-a1ce-3afcfe24aa7e' => 'Test Oct  3 2020  1:55PM AS',
  '68ad31b8-e876-4f9e-a7f7-9f7a89f60152' => 'Test Oct  3 2020  1:55PM GT1',
  'b48ffe6a-9fe3-4e92-9f58-727ca492942f' => 'Test Oct  3 2020  1:55PM GT2',
  '6d86a359-995d-45bd-9561-e99445f7e461' => 'Test Oct  3 2020  1:55PM GT3',
  'f81f1cee-d4d0-4dc4-84f4-58a99a3f45af' => 'Test Oct  3 2020  1:55PM STU',
  '006a092d-c109-4cfd-80a4-c6316bc27f1f' => 'Test Oct  3 2020  1:55PM T1',
  '30a9f916-79a7-4d23-8453-7157558c3dd3' => 'Test Oct  3 2020  1:55PM T2',
  'fb2c0e5f-f65f-4e8d-a244-04f7877fcbcc' => 'Test Oct  3 2020  2:25PM FA',
  '7cf6f250-df91-4ea4-b9a4-ab82d66ca454' => 'Test Oct  3 2020  2:25PM FC',
  '96cf3012-1a23-4aad-bcb1-584813d72b73' => 'Test Oct  3 2020  2:25PM FE2',
  'f2105ca8-0f4a-488a-a923-4383141ace9b' => 'Test Oct  3 2020  2:25PM FX',
  '0077893a-3aec-433f-9c2a-3581520b9f6c' => 'Test Oct  3 2020  2:25PM P1',
  '4fe9e7d2-894b-4341-9b95-0d886e1178b5' => 'Test Oct  3 2020  2:25PM P2',
  '131ff69c-5906-4176-bc78-a144500be80e' => 'Test Oct  3 2020  2:55PM B-Spec',
  'f27d1547-7c76-4f88-9038-7c2ceda3783e' => 'Test Oct  3 2020  2:55PM EP',
  '20156db0-626f-4b98-bfa0-9cad933e90f3' => 'Test Oct  3 2020  2:55PM FP',
  '6db9b091-f4ac-43f7-bb69-d27c921516f2' => 'Test Oct  3 2020  2:55PM GTL',
  '2968bd5a-73e7-4446-9deb-f6126b689a93' => 'Test Oct  3 2020  2:55PM HP',
  '9cb07167-8084-4e38-93f7-e342514fcfa1' => 'Test Oct  3 2020  2:55PM SM',
  'aca422b1-2072-4d50-a3b2-1ede89e51c9a' => 'Test Oct  3 2020  2:55PM STL',
  '9df05b15-07ba-408e-a934-64c8c3cfc11a' => 'Test Oct  3 2020  2:55PM T3',
  'e50d2f93-bb8e-4537-a54b-8262b75ab5a3' => 'Test Oct  3 2020  2:55PM T4',
  '1e46f52f-360f-4351-939b-3d04179f9e74' => 'Test Oct  3 2020  3:25PM F5',
  '1e9d4ca6-bca0-4ff1-bfd8-79672c74c583' => 'Test Oct  3 2020  3:25PM FF',
  '3a6c37f8-a771-4a7a-a668-3037071aa02b' => 'Test Oct  3 2020  3:25PM FV',
  '5be61e8c-9e09-4da9-9159-f2252ddee842' => 'Test Oct  3 2020  3:25PM SRF3',
  '75dfb798-a03c-4a1e-a68a-7170af266650' => 'Test Oct  3 2020  3:55PM AS',
  'ba776ee2-f02d-4f8e-a8eb-d7d69414f3c0' => 'Test Oct  3 2020  3:55PM FF',
  'f6372188-a60d-4268-bb6b-a252bf5de9a3' => 'Test Oct  3 2020  3:55PM GT2',
  '6d6daced-e9e2-4560-af87-5cff312a283f' => 'Test Oct  3 2020  3:55PM GT3',
  'e70273f8-6375-4b79-932e-9e416997d7d8' => 'Test Oct  3 2020  3:55PM STU',
  '410e2b0e-6d8a-4fe4-808b-2799b811a6b9' => 'Test Oct  3 2020  3:55PM T1',
  '896cafa9-1094-421c-b621-68fa87d34b33' => 'Test Oct  3 2020  3:55PM T2',
  '56004ccc-d281-4993-a0b4-7ba0e673e2a7' => 'Test Oct  3 2020  4:25PM FA',
  '52f2ed50-8bd0-46ea-a728-0d8b0b7a7165' => 'Test Oct  3 2020  4:25PM FC',
  'f0889452-35b7-4025-aee0-5a1731fb70ea' => 'Test Oct  3 2020  4:25PM FE2',
  'b9546c9c-e6dc-4f09-8e48-eae332d576e5' => 'Test Oct  3 2020  4:25PM FX',
  '5fce6c2a-93b4-4ad6-a7ab-0e9c3e358dfc' => 'Test Oct  3 2020  4:25PM P1',
  'cf94e166-157f-4443-9e11-bc807cf7d128' => 'Test Oct  3 2020  4:25PM P2',
  'eec9a15c-435b-4518-ba42-97a78f42fc38' => 'Test Oct  4 2020  8:00AM EP',
  'd046f4db-4a94-4b67-b8f3-e2d6c44cf7b3' => 'Test Oct  4 2020  8:00AM FP',
  '50248861-9fdc-4568-a4c1-65012d069ec3' => 'Test Oct  4 2020  8:00AM GTL',
  '1ff8c80f-90d7-4bc3-a3e8-c438a0595a05' => 'Test Oct  4 2020  8:00AM HP',
  '546594b2-5c92-4fce-afaf-8806c3537173' => 'Test Oct  4 2020  8:00AM STL',
  'a0b5990f-955d-4f20-8039-0142d8bbe283' => 'Test Oct  4 2020  8:25AM F5',
  '52a07e17-0c0a-4463-b58c-3e10d46e0382' => 'Test Oct  4 2020  8:25AM FF',
  '7b697e5e-07d5-41ff-9514-17d617739ffe' => 'Test Oct  4 2020  8:25AM FV',
  'd6e08729-830a-45bc-91dc-ef627b24694d' => 'Test Oct  4 2020  8:25AM SRF3',
  '581af451-48bb-4614-876b-b90b63dcc219' => 'Test Oct  4 2020  8:50AM AS',
  '86bc03ad-2252-42d2-a623-92328f850013' => 'Test Oct  4 2020  8:50AM GT1',
  '11ac7e17-47d1-4b3d-8cbc-20b9c59cff7f' => 'Test Oct  4 2020  8:50AM GT2',
  '47796322-aac8-4578-ba8f-4ed8b574ffcd' => 'Test Oct  4 2020  8:50AM GT3',
  '9276b53c-a70c-45c0-b8b6-28a41c28528c' => 'Test Oct  4 2020  8:50AM STU',
  'ea9e460c-457c-43e3-b110-0c9bae5a87fb' => 'Test Oct  4 2020  8:50AM T1',
  '502bc12f-60b9-467c-9241-ac343dedb358' => 'Test Oct  4 2020  8:50AM T2',
  '555452c3-91c8-4b35-a8a2-b984b19c1486' => 'Test Oct  4 2020  9:15AM FA',
  'f064bcac-785b-4099-b634-675dea03e414' => 'Test Oct  4 2020  9:15AM FC',
  'bd27cedb-8f28-4fb2-94cc-fb917358c7cb' => 'Test Oct  4 2020  9:15AM FE2',
  'f1e6c972-84fa-46bf-a160-a8632e286df0' => 'Test Oct  4 2020  9:15AM FX',
  'b16bd170-17b2-4657-83db-2f168fde2815' => 'Test Oct  4 2020  9:15AM P1',
  '8256fb40-fa10-4f15-a425-286b16f067c6' => 'Test Oct  4 2020  9:15AM P2',
  '89e04adc-95c4-4554-b500-c85fcc9e829b' => 'Test Oct  4 2020  9:40AM B-Spec',
  'a13f3469-c08e-4a34-aa9d-f1d81c212357' => 'Test Oct  4 2020  9:40AM SM',
  '6c595d18-43a3-4509-93c3-e56000843dd9' => 'Test Oct  4 2020  9:40AM T3',
  'fb544353-b209-4a07-8b2c-f10695c4df4f' => 'Test Oct  4 2020  9:40AM T4',
  'd7dd993e-b9d9-44c9-abfd-f425c543d5ff' => 'Test Oct  4 2020 10:05AM EP',
  '2b437b56-215e-4dd3-a8fe-cd8e57dee087' => 'Test Oct  4 2020 10:05AM FP',
  'af7291c3-5234-4c19-bd43-af93816cc44c' => 'Test Oct  4 2020 10:05AM GTL',
  'a2beccf8-4c36-4cce-ac7c-425f4aa32b88' => 'Test Oct  4 2020 10:05AM HP',
  'b8dcbd9b-bace-42a0-8367-4b4ab5b72ea0' => 'Test Oct  4 2020 10:05AM STL',
  'cfc06c68-504f-460e-828d-9cff165ae5d4' => 'Test Oct  4 2020 10:30AM F5',
  '135aaf1f-0acf-4a21-ba8f-dcf0ab7c36ec' => 'Test Oct  4 2020 10:30AM FF',
  'cd4a2f07-15d2-4df2-8379-f1ae0b5edb39' => 'Test Oct  4 2020 10:30AM FV',
  '5946f013-1206-4c39-a6a7-4838f1144fc6' => 'Test Oct  4 2020 10:30AM SRF3',
  'bdaf42d9-fb52-4e0a-8716-0a9a394de243' => 'Test Oct  4 2020 10:55AM AS',
  '4c5d09dc-57a3-4e44-a6ec-fc7e4ba1fbad' => 'Test Oct  4 2020 10:55AM GT1',
  '491a5003-6988-4891-adbf-f9a7ed9a7bf1' => 'Test Oct  4 2020 10:55AM GT2',
  'a85c6137-5ccb-4a79-8d81-1c2e52f74868' => 'Test Oct  4 2020 10:55AM GT3',
  '3edccb7f-5e48-4b54-a322-56de47808cae' => 'Test Oct  4 2020 10:55AM STU',
  '525dfafe-0efa-471d-a68c-aed2584b8d0b' => 'Test Oct  4 2020 10:55AM T1',
  '9eb5dfe2-1504-43c1-9fc8-c9cf62dc8499' => 'Test Oct  4 2020 10:55AM T2',
  'f1c538f4-a9d2-4a4d-bc44-9d886e196a5f' => 'Test Oct  4 2020 11:20AM FA',
  '0d1d7703-c5d4-4166-b715-bff4709dccbd' => 'Test Oct  4 2020 11:20AM FC',
  'b4aed2f6-ae08-4294-b0e3-6d2e399bb728' => 'Test Oct  4 2020 11:20AM FE2',
  'ffb2aae2-bcd6-4ea3-8b53-68a97497b906' => 'Test Oct  4 2020 11:20AM FX',
  '92c56d9d-6947-4112-9cb2-e6705fe04505' => 'Test Oct  4 2020 11:20AM P1',
  '0dac0379-6179-4b93-8a5b-3f1bafcfb06a' => 'Test Oct  4 2020 11:20AM P2',
  '066fa734-1ad0-4a40-b475-8c3f6225bfb7' => 'Test Oct  4 2020 11:45AM B-Spec',
  'e68b45d5-352b-4da3-a441-a6b49b016699' => 'Test Oct  4 2020 11:45AM SM',
  '04813844-121c-45c0-ab3e-9f3f1faca2e5' => 'Test Oct  4 2020 11:45AM T3',
  'fc0f0f98-c2e3-4fca-b3e7-492515cfe3d2' => 'Test Oct  4 2020 11:45AM T4',
  '1d5ea693-8bcf-4a90-b46c-f06044782187' => 'Test Oct  4 2020  1:05PM EP',
  '17ace034-685e-4456-8d01-e143cc5370dc' => 'Test Oct  4 2020  1:05PM FP',
  '2de56657-91b2-41ab-a760-0cacb313fa8f' => 'Test Oct  4 2020  1:05PM GTL',
  '13b7ac39-9e11-446c-8300-582ae9afd8c4' => 'Test Oct  4 2020  1:05PM HP',
  '88bf5375-a66d-4574-a1c8-054783428196' => 'Test Oct  4 2020  1:05PM STL',
  '6ed14b5d-3d5c-4a40-84e4-82581f6cb5f2' => 'Test Oct  4 2020  1:30PM F5',
  '23213ec9-3b07-42ba-ba3d-91f7a16d5611' => 'Test Oct  4 2020  1:30PM FF',
  '4839fc01-43f3-483a-8603-34d14ab202bf' => 'Test Oct  4 2020  1:30PM FV',
  '2d4d5b69-91a9-4f14-ae1e-cfe06c558823' => 'Test Oct  4 2020  1:30PM SRF3',
  '39940567-a263-42ea-9d37-64fdda55b9cf' => 'Test Oct  4 2020  1:55PM AS',
  '53d7313f-5895-4f19-8b1e-64ae5f2c30bb' => 'Test Oct  4 2020  1:55PM GT1',
  'a6c489d9-cac2-4e1c-83ba-0cfe095ecc33' => 'Test Oct  4 2020  1:55PM GT2',
  '73f9d358-82c9-4bcb-9409-e3202175c7d4' => 'Test Oct  4 2020  1:55PM GT3',
  '9414dd53-1c28-4626-ad8c-738f840d7078' => 'Test Oct  4 2020  1:55PM STU',
  'c98b7f61-c6ad-4ae3-aa01-b5cf7d98414b' => 'Test Oct  4 2020  1:55PM T1',
  '207db73b-187a-4a39-826d-f10442dd6cba' => 'Test Oct  4 2020  1:55PM T2',
  'e7e04f03-64ef-41fa-a7ae-ca12df538c57' => 'Test Oct  4 2020  2:20PM FA',
  '53a0af9f-a2fd-43fe-aa40-0ea5664286f4' => 'Test Oct  4 2020  2:20PM FC',
  '6b301523-4627-420a-ad5b-c5f0747c7017' => 'Test Oct  4 2020  2:20PM FE2',
  '7f1e8b44-d846-4c17-b075-78405e3167bb' => 'Test Oct  4 2020  2:20PM FX',
  'af64654e-a9e2-48ac-919e-0b1a9e5d0e72' => 'Test Oct  4 2020  2:20PM P1',
  'b9f6cd94-abbe-4f24-9b93-0e4bb3cbbcd7' => 'Test Oct  4 2020  2:20PM P2',
  'a31248fd-016a-488e-a6d6-f22178a0761f' => 'Test Oct  4 2020  2:45PM B-Spec',
  '62e6d38f-9414-41c5-b642-946c25bbe853' => 'Test Oct  4 2020  2:45PM SM',
  '828a3fa9-0e18-48dd-829b-a02c9d51f8d6' => 'Test Oct  4 2020  2:45PM T3',
  'd719e2ee-8093-4960-a2f7-1603d988d078' => 'Test Oct  4 2020  2:45PM T4',
  '579927cc-44d4-452f-af60-db1e04af7e37' => 'Test Oct  4 2020  3:10PM EP',
  'f4201963-4913-4382-965c-b0840924af99' => 'Test Oct  4 2020  3:10PM FP',
  '801f3a2b-74e9-467f-945d-0befc1c96185' => 'Test Oct  4 2020  3:10PM GTL',
  'e2154380-4b2d-4a34-9d6a-e439922ceba5' => 'Test Oct  4 2020  3:10PM HP',
  '71009704-1c72-4dd3-a4fd-f8357510807e' => 'Test Oct  4 2020  3:10PM STL',
  '41d3e905-9274-43de-ba31-ad4b378f1876' => 'Test Oct  4 2020  3:40PM F5',
  'd7ca13b3-0abc-444f-9912-aa415aac63a7' => 'Test Oct  4 2020  3:40PM FF',
  'c8eee6eb-039e-4910-8bd2-755c7c0f5925' => 'Test Oct  4 2020  3:40PM FV',
  '6e1fdee7-0ff3-4624-96fa-ec0e7244bd9c' => 'Test Oct  4 2020  3:40PM SRF3',
  '55d6d323-719b-4e44-8077-5a9bcb33e379' => 'Test Oct  4 2020  4:10PM AS',
  '46b5e367-f1b8-4a11-b3b0-33e1f2a38f2a' => 'Test Oct  4 2020  4:10PM GT1',
  '3d17a9dd-de0a-4347-b74d-3ea6de3ad3d1' => 'Test Oct  4 2020  4:10PM GT2',
  '52a0ccca-e5a0-4cda-84d0-3ecc8c75745f' => 'Test Oct  4 2020  4:10PM GT3',
  '49019eb0-775c-4a61-b2dd-9c3a3a579b2b' => 'Test Oct  4 2020  4:10PM STU',
  '9c225fcb-9069-4135-b3d4-54ee054fa315' => 'Test Oct  4 2020  4:10PM T1',
  'f90bcf5d-38f8-42a6-87b1-b736dac013db' => 'Test Oct  4 2020  4:10PM T2',
  'f97cdcb0-a2d0-4a5b-b43c-df8a94295b4d' => 'Test Oct  4 2020  4:40PM FA',
  '09173f25-55dd-47ab-87b1-011ecff78cc3' => 'Test Oct  4 2020  4:40PM FC',
  'c523082a-fdf3-4992-8f64-58586b516f67' => 'Test Oct  4 2020  4:40PM FE2',
  'd96452b7-ba2c-415b-98b8-18bcf32a3749' => 'Test Oct  4 2020  4:40PM FX',
  '5e0ce3e4-721e-4633-a19a-da7f79056294' => 'Test Oct  4 2020  4:40PM P1',
  'af52d7e0-fa62-4ee9-8375-da58312d45b7' => 'Test Oct  4 2020  4:40PM P2',
  '634cf9f1-28e0-460e-9e11-f5e3bc6b948d' => 'Test Oct  4 2020  5:10PM B-Spec',
  'bbd42999-e896-440b-8050-de5b2c8bdeca' => 'Test Oct  4 2020  5:10PM SM',
  '25cdbe76-ed00-478f-becf-45d66f070033' => 'Test Oct  4 2020  5:10PM T3',
  '3413c423-a06b-49c5-80d9-399e77460462' => 'Test Oct  4 2020  5:10PM T4',
  'decdc601-8e70-41bc-8709-a78e92698285' => 'Test Oct  5 2020  8:00AM B-Spec',
  'd0868068-f270-454a-9538-b7eb4f2469d5' => 'Test Oct  5 2020  8:00AM EP',
  '8e3f4888-9a8f-4717-94ef-81ca9d515a78' => 'Test Oct  5 2020  8:00AM FP',
  '380f1364-031c-4340-a72a-061e5d7fb0de' => 'Test Oct  5 2020  8:00AM GTL',
  '0c3edd85-c748-4264-b9cd-3b6434387ada' => 'Test Oct  5 2020  8:00AM HP',
  'd3e60d0f-e931-4344-b1c8-bec14537e378' => 'Test Oct  5 2020  8:25AM F5',
  'e84b4030-2c4a-4d84-82a5-2d5eaa0b872a' => 'Test Oct  5 2020  8:25AM FF',
  '5a08a869-f74f-41f1-8dfb-d608d975c3fc' => 'Test Oct  5 2020  8:25AM FV',
  '76c6f21c-3dd8-4bfe-8c27-4411567a6019' => 'Test Oct  5 2020  8:50AM SRF3',
  '3110e6fd-11b2-4236-9658-7a8ee88502fe' => 'Test Oct  5 2020  9:15AM AS',
  'b7e59d35-8442-494c-ade0-bfb9ded01690' => 'Test Oct  5 2020  9:15AM GT1',
  '019540dc-ce79-43e0-9454-9916ef23af5c' => 'Test Oct  5 2020  9:15AM GT2',
  'b83d6862-4a40-4f92-ace5-558325eba46e' => 'Test Oct  5 2020  9:15AM GT3',
  'c543a176-a821-4bdd-9c16-7f3d6e0606bd' => 'Test Oct  5 2020  9:15AM STU',
  'bd800f52-0e61-454e-b662-50a65debd861' => 'Test Oct  5 2020  9:15AM T1',
  'd38bf89b-ebcb-47c4-88f1-0b103cf62c8a' => 'Test Oct  5 2020  9:40AM SM',
  'f96e7a3c-f3ad-473f-be8e-89f7184add05' => 'Test Oct  5 2020  9:40AM STL',
  '8b4774ba-ee17-48ce-a19e-e8470cf4421e' => 'Test Oct  5 2020 10:05AM FA',
  '7ebeca94-eaff-4d19-9a25-b1d4002a66f5' => 'Test Oct  5 2020 10:05AM FC',
  '18cc15f7-a05c-4c55-9dc9-1f9dd9519a29' => 'Test Oct  5 2020 10:05AM FE2',
  'e68bd0c0-df38-4607-9222-d4ee354db995' => 'Test Oct  5 2020 10:05AM FX',
  'be8fa245-9c02-4502-90d8-81e3510becc2' => 'Test Oct  5 2020 10:05AM P1',
  'a8a2552e-f45d-49dc-a2a5-eb1b0cd28331' => 'Test Oct  5 2020 10:05AM P2',
  '24c300bd-57c1-4c04-abae-bce4dd4668af' => 'Test Oct  5 2020 10:30AM T2',
  'a442e79a-a225-41a0-a9be-35d3922c1e9a' => 'Test Oct  5 2020 10:30AM T3',
  '0ba722ec-b0ec-46a7-83c6-9dbbbd37561f' => 'Test Oct  5 2020 10:30AM T4',
  'b7a121c7-9f51-4b29-9c24-a9e5bf419e74' => 'Test Oct  5 2020 10:55AM B-Spec',
  '40ab9622-be23-4813-9e2d-c8fb2bc1d331' => 'Test Oct  5 2020 10:55AM EP',
  '66341cc2-2784-4d5d-be1a-eaac70330465' => 'Test Oct  5 2020 10:55AM FP',
  '54d0880f-cd05-4630-a7ff-264a8c27a7e7' => 'Test Oct  5 2020 10:55AM GTL',
  '44711933-d53f-46c4-9bd5-619fa98d1493' => 'Test Oct  5 2020 10:55AM HP',
  '80a3141e-55a7-4c3f-b2e0-11a728546c65' => 'Test Oct  5 2020 11:20AM F5',
  'ca158462-8729-424e-9118-84db13ce4a4e' => 'Test Oct  5 2020 11:20AM FF',
  '03e45989-d8c8-42ab-b15c-a18dbcf4a749' => 'Test Oct  5 2020 11:20AM FV',
  '7c29a674-7f69-465e-be27-076f3f2db8e4' => 'Test Oct  5 2020 11:45AM SRF3',
  'ff413e74-5ca8-4c54-b836-c83a45b15f4c' => 'Test Oct  5 2020  1:05PM AS',
  '5c8d13d6-9af2-4339-bd8b-867224971f9a' => 'Test Oct  5 2020  1:05PM GT1',
  '7ae5ce93-78f0-4f8d-8bdf-687e6035a16c' => 'Test Oct  5 2020  1:05PM GT2',
  '7969cbc2-fe37-447d-9844-9d1a8246c599' => 'Test Oct  5 2020  1:05PM GT3',
  '7abf5737-d984-408e-b767-353cbbd34a32' => 'Test Oct  5 2020  1:05PM STU',
  'da6fa4cf-bc59-4e4c-9514-561364e9254c' => 'Test Oct  5 2020  1:05PM T1',
  '58cd7dac-f610-4459-b3bc-1fd799a978d4' => 'Test Oct  5 2020  1:30PM SM',
  'c0ea56f3-bed7-44ea-9aa6-8b3fd2646c76' => 'Test Oct  5 2020  1:30PM STL',
  '32205161-0ecb-4a66-9247-a2a4157621e9' => 'Test Oct  5 2020  1:55PM FA',
  '1a617cce-c010-4e08-83e7-c915f23f6981' => 'Test Oct  5 2020  1:55PM FC',
  'b9df1c74-0a6c-4e38-97ca-20cdb5abe44c' => 'Test Oct  5 2020  1:55PM FE2',
  '64254359-e816-44ea-8521-4c9d4e9a9ff5' => 'Test Oct  5 2020  1:55PM FX',
  'c56d4ec6-63d9-4323-b4e6-40848a1f4926' => 'Test Oct  5 2020  1:55PM P1',
  '7681fc7e-c5c7-4df7-bfc6-75fb131f5388' => 'Test Oct  5 2020  1:55PM P2',
  'ae18845e-0f5d-46d5-a889-13543ff9c4ee' => 'Test Oct  5 2020  2:20PM T2',
  '9b629c28-8004-4179-9922-a88caf60b1e4' => 'Test Oct  5 2020  2:20PM T3',
  'b60f311d-d54c-44bd-a210-c81b39ad86d2' => 'Test Oct  5 2020  2:20PM T4',
  '9a776924-391b-41ea-b60f-d48a2d7125e2' => 'Test Oct  5 2020  2:45PM B-Spec',
  '02eb5c4f-f3e3-4b56-8349-8ab1444cee38' => 'Test Oct  5 2020  2:45PM EP',
  '7af6d547-3132-47a2-ba37-e33297683bdc' => 'Test Oct  5 2020  2:45PM FP',
  '0f21d5df-9c33-4cdc-a61f-689323afb19e' => 'Test Oct  5 2020  2:45PM GTL',
  '0377871f-79e2-47a0-8760-e871329b28a8' => 'Test Oct  5 2020  2:45PM HP',
  'd3fad312-07ca-47c9-aa7f-034355e90599' => 'Test Oct  5 2020  3:10PM F5',
  '20c0a051-8265-4c09-ad42-b5fd5fa3f9b0' => 'Test Oct  5 2020  3:10PM FF',
  '321d1705-f84a-4d23-b769-44b6c9d171ce' => 'Test Oct  5 2020  3:10PM FV',
  '3d50f4d3-dc4c-4508-8878-647a6c66920a' => 'Test Oct  5 2020  3:35PM SRF3',
  'bccb0a74-071a-417a-825a-ca99253f576c' => 'Test Oct  5 2020  4:00PM AS',
  '65719415-cb8d-473a-a289-78ca92d04070' => 'Test Oct  5 2020  4:00PM GT1',
  '2564c5cc-137d-4650-8e17-d5aa20b577cf' => 'Test Oct  5 2020  4:00PM GT2',
  'de693232-19c1-4607-9b6c-2bc8131170c6' => 'Test Oct  5 2020  4:00PM GT3',
  '791e601e-17fc-4d4a-8146-5b91ff1effaf' => 'Test Oct  5 2020  4:00PM STU',
  '751539f7-cf85-45cd-a409-e032b5442ac3' => 'Test Oct  5 2020  4:00PM T1',
  '44ba1b9a-47a7-4e25-9407-db4a0b610cd3' => 'Test Oct  5 2020  4:25PM SM',
  '037ac35a-8ff2-4237-a0b7-6997d0bea9d8' => 'Test Oct  5 2020  4:25PM STL',
  '7a837816-4a89-4bd3-9f19-dbe499527158' => 'Test Oct  5 2020  4:50PM FA',
  '9036e444-f4e5-4cf1-8d61-8247abe6dcbe' => 'Test Oct  5 2020  4:50PM FC',
  '74f94e4c-d3df-43c6-a3fc-872d9915a237' => 'Test Oct  5 2020  4:50PM FE2',
  '14e0f427-b8aa-4ed7-80b5-7c7196834377' => 'Test Oct  5 2020  4:50PM FX',
  'a5fe126c-db84-4ca6-b4a5-f000fb3c6dc2' => 'Test Oct  5 2020  4:50PM P1',
  'd8dd37d1-b744-4a63-a138-189853231b7e' => 'Test Oct  5 2020  4:50PM P2',
  'dcf2b082-54ef-48b9-9a33-2f52d69cf052' => 'Test Oct  5 2020  5:15PM T2',
  'cc3c593e-4fce-4baf-8539-0033d95ec670' => 'Test Oct  5 2020  5:15PM T3',
  '473d8cee-5069-4864-9818-133263e1feaf' => 'Test Oct  5 2020  5:15PM T4',
  '0ffbda4e-d7a0-43d7-9ed7-ae10f696f62a' => 'Qualifying Oct  6 2020  8:00AM T3',
  'd9dd1545-610b-4967-a801-db2d3f18404c' => 'Qualifying Oct  6 2020  8:32AM T4',
  'f7d2accc-5b83-4250-bace-c670e4474456' => 'Qualifying Oct  6 2020  9:04AM STL',
  '209469bd-ac00-4336-9eee-53c0e2a34f02' => 'Qualifying Oct  6 2020  9:36AM AS',
  '503e0a1f-038a-4216-8d98-6dda1188c31c' => 'Qualifying Oct  6 2020  9:36AM T1',
  '2e5121cc-3bfb-4a27-b121-a65eb79ff7d6' => 'Qualifying Oct  6 2020 10:08AM F5',
  'c6d7d4c2-02be-4a34-917a-496c0de37723' => 'Qualifying Oct  6 2020 10:08AM FF',
  'c05df91e-fcb9-41ce-b734-8143b805bbb7' => 'Qualifying Oct  6 2020 10:40AM GT3',
  '94b88681-76e0-46e9-8568-0d47775a5129' => 'Qualifying Oct  6 2020 11:12AM B-Spec',
  'c43c3d23-0d40-4dcd-9eb3-51e2ec618984' => 'Qualifying Oct  6 2020 11:12AM HP',
  'c1ba39dd-0a3c-4c87-8d7c-9723b99b6bee' => 'Qualifying Oct  6 2020 11:44AM GT1',
  '4f72b24b-6ac4-4ec9-9ef8-9e5f2d139479' => 'Qualifying Oct  6 2020 11:44AM GT2',
  '31bb4817-4a70-4622-abda-a49a4b9a5705' => 'Qualifying Oct  6 2020  1:06PM EP',
  '288c292e-f966-46fa-bcaa-99cd8bbd57b8' => 'Qualifying Oct  6 2020  1:06PM GTL',
  '5787af98-587d-48be-9778-0ade2fff48e3' => 'Qualifying Oct  6 2020  1:38PM SRF3',
  '38cbc98f-2ea9-4317-b7a4-f560afc49452' => 'Qualifying Oct  6 2020  2:10PM SM',
  '43968816-5339-4e88-b92f-648aca0ef166' => 'Qualifying Oct  6 2020  2:42PM FV',
  '59777307-001b-4e1b-abf2-49cc6bad8c53' => 'Qualifying Oct  6 2020  3:14PM FE2',
  '7d9dc6ff-f810-450f-9d4f-870c480cf664' => 'Qualifying Oct  6 2020  3:46PM FP',
  'd05db28e-e7b1-4f40-b1db-1dd1d648529a' => 'Qualifying Oct  6 2020  4:18PM FA',
  'e6c0dcb7-74c2-4bc1-bcba-1388444ab8b3' => 'Qualifying Oct  6 2020  4:18PM FC',
  '49008a73-f5a6-48c0-8854-5bc988428cb1' => 'Qualifying Oct  6 2020  4:18PM FX',
  'a6d7b068-2b6c-4778-9209-106238d09333' => 'Qualifying Oct  6 2020  4:50PM STU',
  '6d0d28ff-b963-4e0e-8b5f-88f90193feaa' => 'Qualifying Oct  6 2020  4:50PM T2',
  '0f0f868c-2e52-4b0f-8130-e644ae82c6bc' => 'Qualifying Oct  6 2020  5:22PM P1',
  'abcfbf92-5695-4759-81fe-0c49b2260514' => 'Qualifying Oct  6 2020  5:22PM P2',
  '4a0ddea7-3816-407e-a918-4b005fe13a42' => 'Qualifying Oct  7 2020  8:00AM AS',
  '0c636ffc-7906-4125-8315-08a172e3fbba' => 'Qualifying Oct  7 2020  8:00AM T1',
  '20643b3c-686a-443a-b125-312326297ad6' => 'Qualifying Oct  7 2020  8:32AM STL',
  '392ca789-620e-4633-b356-2a5ed742a410' => 'Qualifying Oct  7 2020  9:04AM T3',
  '25dd3270-a3a1-401e-85ea-712ad8bbb2e5' => 'Qualifying Oct  7 2020  9:04AM T4',
  '93d4b90d-8859-4326-8e3c-aa7f7af4de08' => 'Qualifying Oct  7 2020  9:36AM F5',
  '889f3f0b-b785-4d1b-ac5f-cec4dedbfa53' => 'Qualifying Oct  7 2020  9:36AM FF',
  'b76f05f4-a8aa-4f26-bc90-b5b064f98cc9' => 'Qualifying Oct  7 2020 10:08AM GT3',
  'e73f2164-ea46-4511-b520-ed4e3603a564' => 'Qualifying Oct  7 2020 10:40AM HP',
  'd007746a-6272-40e5-92c0-50137d72a4b9' => 'Qualifying Oct  7 2020 11:12AM B-Spec',
  'f63ff5e5-c897-482d-9cb3-be165a5e4bb8' => 'Qualifying Oct  7 2020 11:44AM GT1',
  'f6e490ff-fc3e-468c-bf62-738781a31801' => 'Qualifying Oct  7 2020 11:44AM GT2',
  'a3b20a6e-8f47-43e4-9327-c1ec2215c8fa' => 'Qualifying Oct  7 2020  1:06PM EP',
  'd9b307ed-9501-464a-9a11-d22ab829ef3c' => 'Qualifying Oct  7 2020  1:06PM GTL',
  '1439b668-df5e-4ccd-aba0-be9bdf11649b' => 'Qualifying Oct  7 2020  1:38PM SRF3',
  'f8e33571-d578-42d9-9c76-9b247388da48' => 'Qualifying Oct  7 2020  2:10PM SM',
  'c0a41344-d09f-486d-8724-0beaf0c2a9d4' => 'Qualifying Oct  7 2020  2:42PM FV',
  'e0b29302-d4a3-48cc-89a4-8f4e698f8ab8' => 'Qualifying Oct  7 2020  3:14PM FE2',
  '374111eb-38ce-45a5-9418-95d50fb5bb2f' => 'Qualifying Oct  7 2020  3:46PM FP',
  'b91c36a8-d753-4470-b2ca-f425829148e0' => 'Qualifying Oct  7 2020  4:18PM P1',
  '3565be07-0c2a-4af3-ac38-5f7475423a5b' => 'Qualifying Oct  7 2020  4:18PM P2',
  '0501e099-0c42-4021-a1bf-492298aa2895' => 'Qualifying Oct  7 2020  4:50PM STU',
  '90f45cf6-7f34-4105-938b-70e066d2b3e5' => 'Qualifying Oct  7 2020  4:50PM T2',
  '018dcdbe-0383-404c-8b12-0680b07c0a54' => 'Qualifying Oct  7 2020  5:22PM FA',
  'f264a568-ea38-4ae2-a650-92b0e17952cc' => 'Qualifying Oct  7 2020  5:22PM FC',
  '48c4a073-d028-4a52-b610-229692e97dbc' => 'Qualifying Oct  7 2020  5:22PM FX',
  'd3a86179-2da9-4a3d-8348-8c3ccf727e4e' => 'Qualifying Oct  8 2020  8:00AM T3',
  'd8c4eaab-02db-4a30-9327-2bd946609092' => 'Qualifying Oct  8 2020  8:00AM T4',
  'a9b15e2b-db94-46df-a9f2-a3fdedd29d09' => 'Qualifying Oct  8 2020  8:32AM STL',
  '59757999-791c-46c6-ba13-944fbab39778' => 'Qualifying Oct  8 2020  9:04AM AS',
  'dfc3b3bc-ea23-4406-b04e-1b50176e76d8' => 'Qualifying Oct  8 2020  9:04AM T1',
  '15a1f1ec-d900-4968-8f4b-0dfe8870db5f' => 'Qualifying Oct  8 2020  9:36AM F5',
  '8e4b975f-2ecf-4bb5-873f-557531c620c4' => 'Qualifying Oct  8 2020  9:36AM FF',
  'b7ef034f-c984-4186-a02a-c050bbb5a93e' => 'Qualifying Oct  8 2020 10:08AM GT3',
  '0f81b130-6ef4-4312-90cd-b4bc9fb2c3b2' => 'Qualifying Oct  8 2020 10:40AM B-Spec',
  '6d9293b9-f2eb-41de-902a-901c049ce9d2' => 'Qualifying Oct  8 2020 10:40AM HP',
  'ba2a0971-7802-4a72-a0d5-3d015e95175b' => 'Qualifying Oct  8 2020 11:12AM GT1',
  '53f9c052-0ea3-4dae-84ed-2ee248dc63ce' => 'Qualifying Oct  8 2020 11:44AM GT2',
  '84dce5b6-c283-4860-840a-793b50b621ff' => 'Qualifying Oct  8 2020  1:06PM EP',
  '2933c26e-241b-4be8-aad9-2daf017dc8f7' => 'Qualifying Oct  8 2020  1:06PM GTL',
  '56819152-450d-407c-bcca-e8c092614c2f' => 'Qualifying Oct  8 2020  1:38PM SRF3',
  '59f8e653-b196-4146-a479-6fef498fc1cf' => 'Qualifying Oct  8 2020  2:10PM SM',
  '258dcd36-87ad-41e7-a862-75fc6965d54c' => 'Qualifying Oct  8 2020  2:42PM FV',
  '38a1bfaf-01a6-446a-842f-84d3f72653db' => 'Qualifying Oct  8 2020  3:14PM FE2',
  '219651b6-5fd6-4db0-924e-805fb6655262' => 'Qualifying Oct  8 2020  3:46PM FP',
  'f846c2b9-ca41-4f08-94ec-8feac5bb97e2' => 'Qualifying Oct  8 2020  4:18PM FA',
  'cfffd271-ac03-4aab-a355-03ff292178e8' => 'Qualifying Oct  8 2020  4:18PM FC',
  '130a88d7-389b-4aad-98eb-148ad55888d7' => 'Qualifying Oct  8 2020  4:18PM FX',
  '01516e2f-85ed-4b3e-9f23-5cd92a7c8a14' => 'Qualifying Oct  8 2020  4:50PM STU',
  '9dad55eb-73f5-4d71-a46f-9c9ac17cfa77' => 'Qualifying Oct  8 2020  4:50PM T2',
  '84322119-b101-403d-a764-1e2003f488cb' => 'Qualifying Oct  8 2020  5:22PM P1',
  'f6081970-d259-494b-8b4a-fec5fcf19915' => 'Qualifying Oct  8 2020  5:22PM P2',
  '3aafc72f-4149-4f44-9cb3-1deaf4091a23' => 'Race Oct  9 2020  8:15AM T1',
  'f13d05c9-e720-4847-893f-a5f711327305' => 'Race Oct  9 2020  9:15AM F5',
  'b3606b41-bf03-41d0-8c2c-fae9f0a8dbdd' => 'Race Oct  9 2020 10:15AM T3',
  'adba7852-a762-485c-a703-9900c43a7ca7' => 'Race Oct  9 2020 11:15AM GT3',
  '8a3344f4-2b64-4439-a4ce-ee5f4d4f144a' => 'Race Oct  9 2020  1:00PM SM',
  '16af11c1-63d2-4f48-9cb8-f916d8cd26a3' => 'Race Oct  9 2020  2:00PM P2',
  '9b8cdc1a-748e-4062-8aa2-390ef3e94f47' => 'Race Oct  9 2020  3:00PM FP',
  '0a09f5b3-6597-42a6-bb70-eecd0d3350c1' => 'Race Oct  9 2020  4:00PM T2',
  'bff7957b-3448-4933-ab99-0b22d82133fb' => 'Race Oct  9 2020  5:00PM FA',
  '9dc1f560-2be0-40af-8a25-9e5a7c3e5a40' => 'Race Oct 10 2020  8:15AM AS',
  '0263df19-2bb7-4c21-807f-018a47129f19' => 'Race Oct 10 2020  9:15AM FF',
  '4ab5845f-eab5-43ed-bf08-95e35d3c4684' => 'Race Oct 10 2020 10:15AM B-Spec',
  '2eb61309-3c3c-4a46-945a-76cfc1790ebe' => 'Race Oct 10 2020 11:15AM GT1',
  'c4edae4c-ddcc-4166-a0d2-e04541406d17' => 'Race Oct 10 2020  1:00PM SRF3',
  '5ce74f86-a048-445c-9c14-80350f21908c' => 'Race Oct 10 2020  2:00PM EP',
  'd3c225fe-ea9d-47a9-a65f-75c912ab7e5f' => 'Race Oct 10 2020  3:00PM STU',
  'db722d0f-d2d8-4bff-aeb6-ca7f3240a058' => 'Race Oct 10 2020  4:00PM FC',
  '325a9a32-cb77-4c75-8b98-bbd733e1cb91' => 'Race Oct 10 2020  5:00PM FX',
  '090e1ef5-cdc0-48c0-a268-4aa5cf61a7ea' => 'Race Oct 11 2020  8:15AM T4',
  'd963588e-013d-4e3a-b416-4f21828f8cb6' => 'Race Oct 11 2020  9:15AM HP',
  'be78edcf-7de5-40ef-ba40-79cf60229ff2' => 'Race Oct 11 2020 10:15AM STL',
  '50ddb934-c4d7-4fa0-b6a5-4958b0861b80' => 'Race Oct 11 2020 11:15AM GT2',
  'd32b14f4-dd22-4c59-8ec7-e53a0b5c27d4' => 'Race Oct 11 2020  1:00PM FV',
  'a7ed9485-06cc-4c79-8c01-b8c3da9017fc' => 'Race Oct 11 2020  2:00PM FE2',
  '62c11032-69f9-4495-9e63-167fc1f6a6bb' => 'Race Oct 11 2020  3:00PM GTL',
  'ffe1cb26-f521-4b50-ac59-0824d783fcda' => 'Race Oct 11 2020  4:00PM P1',
);

sub usage  {
  print STDERR @_, "\n" if @_;
  print <<"EOF";
Usage: actionmon [-dvx] [-H host] [-U user] [-P pass] [-D dbpath] [-p printer]
                 [-rm] [file]
       actionmon [-dvx] [-H host] [-U user] [-P pass] [-D dbpath] [-p printer]
                 [-au] [-f] act_no...
       actionmon -h
  -d  Debug
  -h  This help message
  -x  Fetch data file only
  -v  Verbose action list

  -l  List actions in database
  -a  Show/print specified actions
  -r  Print a summary report
  -m  Continually monitor the action system
  -u  Update specified actions...
      with -x, fetch action detail file(s) only
      with -f, force replace/reprint of existing action

  -H  action system server host
  -U  action system userid
  -P  action system password
  -D  database file [$DBPath]
  -p  Print to specified printer

EOF
  exit !!@_;
}

sub parse_args () {
  my %opts;

  getopts('adfhlmruvxp:D:H:U:P:', \%opts) or usage("Invalid option!");
  usage()    if $opts{h};
  $DEBUG++   if $opts{d};
  $VERBOSE++ if $opts{v};
  $GETONLY++ if $opts{x};
  $REPORT++  if $opts{r};
  $MONITOR++ if $opts{m};
  $UPDATE++  if $opts{u};
  $LIST++    if $opts{l};
  $LIST = 2  if $opts{a};
  $FORCE++   if $opts{f};

  $DBPath   = $opts{D} if defined $opts{D};
  $Printer  = $opts{p} if defined $opts{p};
  $SERVER   = $opts{H} if defined $opts{H};
  $USERID   = $opts{U} if defined $opts{U};
  $PASSWD   = $opts{P} if defined $opts{P};

  $URLBase  = "http://$SERVER/racecontrol/";
  $LoginURL = $URLBase . 'Login.aspx';
  $ListURL  = $URLBase . 'Actions.aspx';
  $GetURL   = $URLBase . 'GetAction.aspx?ActionNum=';

  my $pwpath = "$ENV{HOME}/.runoffs_pw";
  if (!$PASSWD && -f $pwpath) {
    my $F = new IO::File($pwpath, O_RDONLY) or die "$pwpath: $!\n";
    while (<$F>) {
      chomp;
      my @F = split;
      $PASSWD = $F[1] if $F[0] eq 'action';
    }
    $F->close;
  }
}


sub db_open () {
  $DB = DBI->connect("dbi:SQLite:dbname=$DBPath", '', '',
    { RaiseError => 1, AutoCommit => 1 });
  $DB->do('create table if not exists action_data (
    aid integer not null,
    field text not null,
    value text,
    primary key (aid,field)
    )');
}

sub db_action_exists ($) {
  my($aid) = @_;
  my $count = $DB->selectrow_array(
    'select count(*) from action_data where aid = ?', {}, $aid);
  return $count;
}

sub db_store_action ($$) {
  my($aid, $a) = @_;

  $DB->do('delete from action_data where aid = ?', {}, $aid);
  my $S = $DB->prepare('insert into action_data (aid, field, value)
    values (?,?,?)');
  while (my($k, $v) = each(%$a)) {
    $S->execute($aid, $k, $v);
  }
}

sub db_fetch_action ($) {
  my($aid) = @_;

  return { map(@$_, @{
    $DB->selectall_arrayref(
    'select field,value from action_data where aid=?', {}, $aid) }) };
}

sub db_list_actions () {
  return $DB->selectcol_arrayref('select distinct aid from action_data');
}


sub process_form ($) {
  my($text) = @_;

  %FormInputs = ();
  my $P = new HTML::Parser(start_h => [ sub {
        my($attrs) = @_;
        $FormInputs{$$attrs{name}} = $$attrs{value};
    }, "attr"]);

  $P->parse($text);
}


sub submit_form ($) {
  my($url) = @_;

  my $req = new HTTP::Request(POST => $url);
  $req->content_type('application/x-www-form-urlencoded');
  $req->content(join('&',
      map($_ . '=' . uri_escape($FormInputs{$_}), keys %FormInputs)));
  my $res = $UA->request($req);
  die $res->status_line . "\n" unless $res->is_success;
  $res->content;
}


sub parse_action ($;$) {
  my($text, $update) = @_;
  my(@actions, $action, $sfield, $field, $ftext);

  if (defined($update)) {
    @actions = ($action = $update);
  }

  my $P = new HTML::Parser(
    start_h => [ sub {
        my($tag, $attrs) = @_;

        if (!defined($update) && $tag eq 'tr' &&
          ($$attrs{class} eq 'rgRow' || $$attrs{class} eq 'rgAltRow')) {
          my $rownum = $$attrs{id};
          $rownum =~ s/.*_//;
          $action = {
            _rownum => $rownum,
            #logo_file => $LOGOFILE,
            #logo_data => $LOGODATA,
          };
          unshift(@actions, $action);
          print STDERR "tr $rownum\n" if $DEBUG;

        } elsif ($tag eq 'span' && $$attrs{id} =~ /RadGrid.*_ctl\d+_/) {
          $field = $';
          $field =~ s/^EditFormControl_//;
          $field =~ s/Label$//;
          $field =~ s/_displayonly$//;
          $ftext = undef;
          print STDERR "span $field\n" if $DEBUG;

        } elsif ($tag eq 'span' && $update) {
          $field = $$attrs{id};
          $ftext = undef;
          print STDERR "span -\n" if $DEBUG;

        } elsif ($tag eq 'select' && $$attrs{id} =~ /RadGrid.*_ctl\d+_/) {
          $sfield = $';
          $sfield =~ s/^EditFormControl_//;
          $sfield =~ s/Label$//;
          $sfield =~ s/_displayonly$//;
          if ($sfield eq 'act_cls_key') { $sfield = '_session' }
          print STDERR "select $sfield\n" if $DEBUG;

        } elsif ($tag eq 'option' && defined $sfield && $$attrs{selected}) {
          $field = $sfield;
          $ftext = undef;

        } elsif ($tag eq 'br') {
          $ftext .= "\n";
        }
      }, "tagname,attr" ],
    end_h => [ sub {
        my($tag) = @_;
        $ftext =~ s/^\s*//;
        $ftext =~ s/\s*$//;
        if (($tag eq 'span' || $tag eq 'option') && defined($field)) {
          if ($ftext ne '' || $$action{$field} eq '') {
            $$action{$field} = $ftext;
          }
          print STDERR "field $field = [$ftext]\n" if $DEBUG;

        } elsif ($tag eq 'td' && defined($action)
          && !exists($$action{_act_key})) {
          $$action{_act_key} = $ftext;
          print STDERR "_act_key $ftext\n" if $DEBUG;

        } elsif ($tag eq 'td' && defined($action)
          && !exists($$action{_cls_key})) {
          $$action{_cls_key} = $ftext;
          print STDERR "_cls_key $ftext\n" if $DEBUG;

        } elsif ($tag eq 'select') {
          $sfield = undef;
        }

        if ($tag ne 'br') {
          $field = undef;
          $ftext = undef;
        }
      }, "tagname" ],
    text_h => [ sub { $ftext .= $_[0] }, "dtext" ],
  );

  $P->parse($text);
  @actions;
}


sub get_action_detail ($$$) {
  my($aid, $rownum, $cls_key) = @_;

  my $req = new HTTP::Request(GET => $GetURL . $aid);
  my $res = $UA->request($req);
  die $res->status_line . "\n" unless $res->is_success;
  return $res->content;
}

sub action_summary($;$) {
  my($a, $extra) = @_;

  my $text = sprintf("#%3d %-5s %8s %-7s %-15s",
    $$a{act_number}, $$a{_date}, $$a{_time}, $$a{act_type},
    $extra ? $$a{_entries_brief} :
    ($$a{_entries_summary} || $$a{_entries_brief}));
  $text .= " $$a{_session}  $$a{act_tech_penalty}" if $extra;
  $text =~ s/\s*$//;
  return $text . "\n"
}

sub action_report($) {
  my($a) = @_;

  return action_summary($a) . "  $$a{_short_desc}\n";
}

sub action_detail($) {
  my($a) = @_;

  my $report = sprintf("  CS:%-3s   SOM:%-3s   COA:%-3s   HOLD:%-3s   REMOVE:%s\n",
    $$a{CsAcked}, $$a{SomComplete}, $$a{CoaComplete}, $$a{HoldResults},
    $$a{act_delete_flag} ? "YES" : "NO");

  $report .= "  $$a{_session}\n";
  $report .= "  $$a{act_tech_penalty}\n" if $$a{act_tech_penalty};
  $report .= "  per $$a{_auth} ($$a{act_gcr_section})\n";
  $report =~ s/per  \(/\(/;
  $report =~ s/\n\s+\(\)\n\Z/\n/;
  return $report;
}

sub print_report ($$) {
  my($template, $fields) = @_;

  my %fields = (%$fields, logo_file => $LOGOFILE, logo_data => $LOGODATA);
  $template =~ s/\@(\w+)\@/$fields{$1}/g;
  my $P = new IO::Pipe;
  $P->writer('lp', "-d$Printer") or die "lp: $!\n";
  print $P $template;
  $P->close;
}


sub process_actions ($) {
  my($text) = @_;
  my(@actions, $report, $summary, $mreport, $count);

  my $start = strftime("%b %d %H:%M", localtime(time));

  process_form($text);
  @actions = parse_action($text);

  foreach my $a (@actions) {
    my $aid = $$a{act_number};
    my $stamp = strftime("%b %d %H:%M", localtime(time));

    if ($UPDATE) {
      #print "$aid / ", join(' ', @ARGV), "\n";
      next unless grep($aid == $_, @ARGV);
    } elsif (db_action_exists($aid)) {
      print "$stamp DUP $aid\n" if $MONITOR && $VERBOSE;
      next;
    }

    # This will get overwritten with a longer form in the detail page
    $$a{_short_desc} = $$a{act_description};

    my $atext = get_action_detail($aid, $$a{_rownum}, $$a{_cls_key});
    if ($GETONLY) {
      print $atext;
      next if $UPDATE;
    }
    parse_action($atext, $a);

    $$a{_session} = $ClassKey{$$a{act_cls_key}} if $$a{_session} eq '';
    ($$a{_date}, $$a{_time}) = split(' ', $$a{act_datetime});
    if    ($$a{act_type} eq 'CSA')     { $$a{_auth} = 'Chief Steward' }
    elsif ($$a{act_type} eq 'RFA')     { $$a{_auth} = 'SOM'           }
    elsif ($$a{act_type} eq 'Protest') { $$a{_auth} = 'SOM'           }
    else                               { $$a{_auth} = $$a{act_type}   }

    # The distinction between protestor and protestee is meaningless to us
    # because only the former is normally filled in except on a protest
    # and because on a protest or appeal, either one could be affected.
    # Further, either of these fields may contain multiple entries!
    # So for our purpose, consolidate into lists of cars, classes, and
    # drivers.

    my @cars    = (split(m{\n}m, $$a{protestorCar}),
                   split(m{\n}m, $$a{protesteeCar}));
    my @classes = (split(m{\n}m, $$a{protestorClass}),
                   split(m{\n}m, $$a{protesteeClass}));
    my @drivers = (split(m{\n}m, $$a{protestor}),
                   split(m{\n}m, $$a{protestee}));
    my @entries = map([ $cars[$_], $classes[$_], $drivers[$_] ], 0.. $#cars);
    #$$a{_entries_split} = [ @entries ];
    #$$a{_entries_full}  = [ map("#$$_[0] $$_[1] $$_[2]", @entries) ];
    my @_entries_full  = map("#$$_[0] $$_[1] $$_[2]", @entries);
    $$a{_entries_brief} = join(', ', map("#$$_[0] $$_[1]", @entries));
    $$a{_entries_summary} = @entries > 1 ? $$a{_entries_brief} : $_entries_full[0];

    if (@entries) {
      foreach (@_entries_full) {
        $$a{__entries__} .= "() ($_) Field newline\n";
      }
      $$a{__entries__} =~ s/^\(\)/(Car(s))/;
    } else {
      $$a{__entries__} = "(Car(s)) ((none listed)) Field newline\n";
    }

    my $desc = wrap('', '', $$a{act_description});
    $desc =~ s/\n*$//;
    foreach (split(/\n/, $desc)) {
      $$a{__details__} .= "() ($_) Field newline\n";
    }
    $$a{__details__} =~ s/^\(\)/(Details)/;

    $report = action_report($a);

    if (!$UPDATE && (
        $$a{act_number} eq '' || !$$a{act_datetime} ||
        !$$a{act_type} || !$$a{act_initiated_by} || !@entries)) {
      $report .= "  NOT READY\n";
      $mreport .= "$stamp $report";
      print $report if $VERBOSE;
      next;
    }

    $summary .= $report;
    $mreport .= "$stamp $report";
    print $report if $VERBOSE;
    $count++;

    $report = action_detail($a);
    $summary .= $report;
    print $report if $VERBOSE;

    $summary .= "\n";
    print "\n" if $VERBOSE;

    if ($DEBUG) {
      print STDERR "Action $aid:\n";
      print STDERR map(sprintf("  %-20s  %s\n", "$_:", $$a{$_}), sort keys %$a);
      print STDERR "\n";
    }

    if ($FORCE || ! db_action_exists($aid)) {
      db_store_action($aid, $a);
      print_report($Template, $a) if $Printer;
    }
  }


  if ($MONITOR) {
    my $done = strftime("%b %d %H:%M", localtime(time));
    print $mreport unless $VERBOSE;
    printf "%s -> %s %d actions\n", $start, $done, $count;
  }
  if ($REPORT && $Printer && $summary) {
    # Print a summary report
    my $P = new IO::Pipe;
    $P->writer('lp', "-d$Printer") or die "lp: $!\n";
    print $P ' ' x 25, "*** ACTION SUMMARY REPORT ***\n";
    print $P $summary;
    $P->close;
  }
}

sub list_actions () {
  my(@list);

  if (@ARGV) {
    @list = sort { $a <=> $b } (@ARGV);
  } else {
    my $list = db_list_actions();
    return unless $list;
    @list = sort { $a <=> $b } (@$list);
  }

  foreach my $a (map(db_fetch_action($_), @list)) {
    print action_summary($a, !$VERBOSE);
    print action_detail($a), "\n" if $VERBOSE;
  }
}


sub print_actions () {
  die "Please list action(s) to print\n" unless @ARGV;
  my @list = sort { $a <=> $b } (@ARGV);

  foreach my $a (map(db_fetch_action($_), @list)) {
    if ($Printer) {
      print_report($Template, $a);
    } else {
      print action_summary($a, 0);
      print action_detail($a), "\n";
    }
  }
}


sub get_data () {
  my $req = new HTTP::Request(GET => $ListURL);
  my $res = $UA->request($req);
  die $res->status_line . "\n" unless $res->is_success;
  my $text = $res->content;

  if ($text =~ /type="password"/) {
    process_form($res->content);
    foreach (grep(/userid/i,   keys %FormInputs)) { $FormInputs{$_} = $USERID }
    foreach (grep(/password/i, keys %FormInputs)) { $FormInputs{$_} = $PASSWD }
    $text = submit_form($LoginURL);
  }

  return $text;
}

parse_args;

{
  my $F = new IO::File($LOGOPATH, O_RDONLY);
  if ($F) { $F->read($LOGODATA, ($F->stat())[7]) }
  else    { warn "$LOGOPATH: $!\n" }
}


## Fetch the data file
$UA = new LWP::UserAgent;
$UA->cookie_jar( {} );
push @{ $UA->requests_redirectable }, 'POST';
$UA->show_progress(1);

db_open();
if ($UPDATE) {
  process_actions(get_data());
} elsif ($LIST > 1) {
  print_actions();
} elsif ($LIST) {
  list_actions();
} elsif ($GETONLY) {
  print get_data();
} elsif (@ARGV) {
  process_actions(join('', <>));
} elsif ($MONITOR) {
  while (1) {
    process_actions(get_data());
    sleep(30);
  }
} else {
  process_actions(get_data());
}

__DATA__
%!PS-Adobe-3.0
%%Creator: changemon
%%DocumentNeededResources: font Helvetica-Bold
%%Pages: 1
%%BeginProlog
/inch {72 mul} def

/doFont { findfont exch scalefont setfont } def
%             size face       
/TitleFont  {   18 /Helvetica-Bold  doFont } def
/LabelFont  {   11 /Helvetica-Bold  doFont } def
/FieldFont  {   11 /Helvetica       doFont } def

/newline { /vpos vpos 0.34 inch sub def } def
/Field { 
  % Label Value
  LabelFont 2.25 inch vpos moveto show
  FieldFont 0.75 inch vpos moveto show
} def
/Field2 { 
  % Label Value
  LabelFont 6.00 inch vpos moveto show
  FieldFont 4.50 inch vpos moveto show
} def

/BeginEPSF { %def
  /b4_Inc_state save def                % Save state for cleanup
  /dict_count countdictstack def        % Count objects on dict stack
  /op_count count 1 sub def             % Count objects on operand stack
  userdict begin                        % Push userdict on dict stack
  /showpage { } def                     % Redefine showpage, { } = null proc
  0 setgray 0 setlinecap                % Prepare graphics state
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where                  % If level not equal to 1 then
  {pop languagelevel                    % set strokeadjust and
  1 ne                                  % overprint to their defaults.
    {false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF { %def
  count op_count sub {pop} repeat       % Clean up stacks
  countdictstack dict_count sub {end} repeat
  b4_Inc_state restore
} bind def
%%EndProlog
%%BeginSetup
%%IncludeResource: font Helvetica-Bold
%%EndSetup
%%Page: 1 1

% Runoffs Logo -- copy bbox from logo EPS header
/logo_bbox {0 0 324 206} def
/logo_scale 0.30 def

BeginEPSF
% logo_bbox
% 3 -1 roll sub logo_scale mul 10.75 inch exch sub
% 3 1 roll exch sub logo_scale mul 8.25 inch exch sub
% exch translate
.25 inch 10.75 inch
logo_bbox exch pop exch sub exch pop
logo_scale mul sub translate
logo_scale dup scale
logo_bbox pop pop neg exch neg exch translate
%%BeginDocument: @logo_file@
@logo_data@
%%EndDocument
EndEPSF

% Page Title
TitleFont
(ACTION)
dup stringwidth pop
8.5 inch exch sub 2 div
9.75 inch 
moveto show

/vpos 9.10 inch def
(Action Number)       (@act_number@)       Field
(Received)            (@act_datetime@)     Field2 newline
(Type)                (@act_type@)         Field
(Initiated By)        (@act_initiated_by@) Field2 newline
(Session)             (@_session@)         Field  newline
@__entries__@
(Penalty)             (@act_tech_penalty@) Field  newline
(GCR/Supp Ref.)       (@act_gcr_section@)  Field  newline
(By order of)         (@_auth@)            Field  newline
@__details__@

(Cleared)        2.25 inch 3.19 inch moveto show
(Withdrawn)      2.25 inch 2.96 inch moveto show
3.8 inch 3.19 inch moveto 4.5 inch 3.19 inch lineto stroke
3.8 inch 2.96 inch moveto 4.5 inch 2.96 inch lineto stroke

(Orbits A)       2.25 inch 2.50 inch moveto show (by) 4.75 inch 2.50 inch moveto show
(Orbits B)       2.25 inch 2.27 inch moveto show (by) 4.75 inch 2.27 inch moveto show
(Orbits C)       2.25 inch 2.04 inch moveto show (by) 4.75 inch 2.04 inch moveto show
(Excel database) 2.25 inch 1.81 inch moveto show (by) 4.75 inch 1.81 inch moveto show

3.8 inch 2.50 inch moveto 4.5 inch 2.50 inch lineto stroke
3.8 inch 2.27 inch moveto 4.5 inch 2.27 inch lineto stroke
3.8 inch 2.04 inch moveto 4.5 inch 2.04 inch lineto stroke
3.8 inch 1.81 inch moveto 4.5 inch 1.81 inch lineto stroke

5.25 inch 2.50 inch moveto 6.625 inch 2.50 inch lineto stroke
5.25 inch 2.27 inch moveto 6.625 inch 2.27 inch lineto stroke
5.25 inch 2.04 inch moveto 6.625 inch 2.04 inch lineto stroke
5.25 inch 1.81 inch moveto 6.625 inch 1.81 inch lineto stroke

showpage
%%Trailer
%%Pages: 1
